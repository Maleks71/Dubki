//
//  RouteDataModel.swift
//  Dubki
//
//  Created by Alexander Morenko on 30.10.15.
//  Copyright ¬© 2015 Alexander Morenko. All rights reserved.
//

import UIKit

// Singleton Class
class RouteDataModel: NSObject {
    
    static let sharedInstance = RouteDataModel()

    //var campuses: NSArray?
    let campuses = NSArray(contentsOfFile: NSBundle.mainBundle().pathForResource("Campuses", ofType: "plist")!)
    
    var fromCampus: Dictionary<String, AnyObject>?
    var toCampus: Dictionary<String, AnyObject>?
    var when: NSDate?
    var route = [
        ["title": "–î—É–±–∫–∏ ‚Üí –°—Ç—Ä–æ–≥–∏–Ω–æ", "detail": "–æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: 09:00 ‚Üí –ø—Ä–∏–±—ã—Ç–∏–µ: 10:18"],
        ["title": "üöå –ê–≤—Ç–æ–±—É—Å", "detail": "–î—É–±–∫–∏ (09:10) ‚Üí –û–¥–∏–Ω—Ü–æ–≤–æ (09:25)"],
        ["title": "üöä –≠–ª–µ–∫—Ç—Ä–∏—á–∫–∞", "detail": "–ö—É–±–∏–Ω–∫–∞ 1 - –ú–æ—Å–∫–≤–∞ (–ë–µ–ª–æ—Ä—É—Å—Å–∫–∏–π –≤–æ–∫–∑–∞–ª) (09:31 ‚Üí 09:47)\n–û—Å—Ç–∞–Ω–æ–≤–∫–∏: –≤–µ–∑–¥–µ\n–í—ã—Ö–æ–¥–∏—Ç–µ –Ω–∞ —Å—Ç–∞–Ω—Ü–∏–∏: –ö—É–Ω—Ü–µ–≤–æ", "url": "http://rasp.yandex.ru/"],
        ["title": "üöá –ú–µ—Ç—Ä–æ", "detail":"–ö—É–Ω—Ü–µ–≤—Å–∫–∞—è (09:57) ‚Üí –°—Ç—Ä–æ–≥–∏–Ω–æ (10:12)"],
        ["title": "üö∂ –ü–µ—à–∫–æ–º", "detail":"–ü—Ä–∏–º–µ—Ä–Ω–æ 6 –º–∏–Ω—É—Ç"]
    ]
    
    override init() {
        super.init()
        
        // load array of campuses from resource
        //let campusesPath = NSBundle.mainBundle().pathForResource("Campuses", ofType: "plist")
        //campuses = NSArray(contentsOfFile: campusesPath!)
        //print(campuses?.count)
        
    }
    
    func routeSetParameter(from: Int, to: Int, when: NSDate) {
        
        self.fromCampus = campuses![from - 1] as? Dictionary<String, AnyObject>
        self.toCampus = campuses![to - 1] as? Dictionary<String, AnyObject>
        self.when = when
        
        let bus = NSLocalizedString("Bus", comment: "") // "üöå –ê–≤—Ç–æ–±—É—Å"
        let rail = NSLocalizedString("Rail", comment: "") // "üöä –≠–ª–µ–∫—Ç—Ä–∏—á–∫–∞"
        let subway = NSLocalizedString("Subway", comment: "") // "üöá –ú–µ—Ç—Ä–æ"
        let onfoot = NSLocalizedString("OnFoot", comment: "") // "üö∂ –ü–µ—à–∫–æ–º"

        if from == 1 {
            route = [
                ["title": "–î—É–±–∫–∏ ‚Üí –°—Ç—Ä–æ–≥–∏–Ω–æ", "detail": "–æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: 09:00 | –ø—Ä–∏–±—ã—Ç–∏–µ: 10:18"],
                ["title": bus, "detail": "–î—É–±–∫–∏ (09:10) ‚Üí –û–¥–∏–Ω—Ü–æ–≤–æ (09:25)"],
                ["title": rail, "detail": "–ö—É–±–∏–Ω–∫–∞ 1 - –ú–æ—Å–∫–≤–∞ (–ë–µ–ª–æ—Ä—É—Å—Å–∫–∏–π –≤–æ–∫–∑–∞–ª) (09:31 ‚Üí 09:47)\n–û—Å—Ç–∞–Ω–æ–≤–∫–∏: –≤–µ–∑–¥–µ\n–í—ã—Ö–æ–¥–∏—Ç–µ –Ω–∞ —Å—Ç–∞–Ω—Ü–∏–∏: –ö—É–Ω—Ü–µ–≤–æ", "url": "http://rasp.yandex.ru/"],
                ["title": subway, "detail":"–ö—É–Ω—Ü–µ–≤—Å–∫–∞—è (09:57) ‚Üí –°—Ç—Ä–æ–≥–∏–Ω–æ (10:12)"],
                ["title": onfoot, "detail":"–ü—Ä–∏–º–µ—Ä–Ω–æ 6 –º–∏–Ω—É—Ç"]
            ]
        } else {
            route = [
                ["title": "–°—Ç—Ä–æ–≥–∏–Ω–æ ‚Üí –î—É–±–∫–∏", "detail": "–æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: 15:31 | –ø—Ä–∏–±—ã—Ç–∏–µ: 17:35"],
                ["title": onfoot, "detail": "–ü—Ä–∏–º–µ—Ä–Ω–æ 6 –º–∏–Ω—É—Ç"],
                ["title": subway, "detail": "–°—Ç—Ä–æ–≥–∏–Ω–æ (15:37) ‚Üí –ö—É–Ω—Ü–µ–≤—Å–∫–∞—è (15:52)"],
                ["title": rail, "detail": "–ú–æ—Å–∫–≤–∞ (–ë–µ–ª–æ—Ä—É—Å—Å–∫–∏–π –≤–æ–∫–∑–∞–ª) - –ú–æ–∂–∞–π—Å–∫ (16:27 ‚Üí 16:39)\n–û—Å—Ç–∞–Ω–æ–≤–∫–∏: –†–∞–±–æ—á–∏–π –ü–æ—Å—ë–ª–æ–∫, –°–µ—Ç—É–Ω—å, –û–¥–∏–Ω—Ü–æ–≤–æ\n–í—ã—Ö–æ–¥–∏—Ç–µ –Ω–∞ —Å—Ç–∞–Ω—Ü–∏–∏: –û–¥–∏–Ω—Ü–æ–≤–æ", "url": "http://rasp.yandex.ru/"],
                ["title": bus, "detail": "–¥–∏–Ω—Ü–æ–≤–æ (17:20) ‚Üí –î—É–±–∫–∏ (17:35)"]
            ]
        }
    }
    
    // Subway Route Data (timedelta in minutes)
    let subwayData = [
        "–ö—É–Ω—Ü–µ–≤—Å–∫–∞—è": [
            "–°—Ç—Ä–æ–≥–∏–Ω–æ":  15,
            "–°–µ–º—ë–Ω–æ–≤—Å–∫–∞—è": 28,
            "–ö—É—Ä—Å–∫–∞—è": 21,
            "–õ–µ–Ω–∏–Ω—Å–∫–∏–π –ø—Ä–æ—Å–ø–µ–∫—Ç" : 28
        ],
        "–ë–µ–ª–æ—Ä—É—Å—Å–∫–∞—è": [
            "–ê—ç—Ä–æ–ø–æ—Ä—Ç": 6,
            "–¢–≤–µ—Ä—Å–∫–∞—è": 4
        ],
        "–ë–µ–≥–æ–≤–∞—è": [
            "–¢–µ–∫—Å—Ç–∏–ª—å—â–∏–∫–∏": 22,
            "–õ—É–±—è–Ω–∫–∞": 12,
            "–®–∞–±–æ–ª–æ–≤—Å–∫–∞—è": 20,
            "–ö—É–∑–Ω–µ—Ü–∫–∏–π –º–æ—Å—Ç": 9,
            "–ü–∞–≤–µ–ª–µ—Ü–∫–∞—è": 17,
            "–ö–∏—Ç–∞–π-–≥–æ—Ä–æ–¥": 11
        ],
        "–°–ª–∞–≤—è–Ω—Å–∫–∏–π –±—É–ª—å–≤–∞—Ä": [
            "–°—Ç—Ä–æ–≥–∏–Ω–æ":  18,
            "–°–µ–º—ë–Ω–æ–≤—Å–∫–∞—è": 25,
            "–ö—É—Ä—Å–∫–∞—è": 18,
            "–õ–µ–Ω–∏–Ω—Å–∫–∏–π –ø—Ä–æ—Å–ø–µ–∫—Ç": 25,
            "–ê—ç—Ä–æ–ø–æ—Ä—Ç": 26,
            "–¢–µ–∫—Å—Ç–∏–ª—å—â–∏–∫–∏": 35,
            "–õ—É–±—è–Ω–∫–∞": 21,
            "–®–∞–±–æ–ª–æ–≤—Å–∫–∞—è": 22,
            "–ö—É–∑–Ω–µ—Ü–∫–∏–π –º–æ—Å—Ç": 22,
            "–¢–≤–µ—Ä—Å–∫–∞—è": 22
        ]
    ]
    let subwayCloses = "01:00"
    let subwayOpens = "05:50"

    func getSubwayData(from: String, to: String) -> Int {
        if let fromStation = subwayData[from] {
            if let result = fromStation[to] {
                return result
            }
        }
        if let toStation = subwayData[to] {
            if let result = toStation[from] {
                return result
            }
        }
        print("not fround subway data from: \(from) to: \(to)")
        return 0
    }
    
    func getNearestSubway(from: String, to: String, when: NSDate) -> Dictionary<String, AnyObject> {
        var result: Dictionary<String, AnyObject> = ["from": from, "to": to]
        
//        if subwayCloses <= when && when <= subwayOpens {
//            // subway is still closed
//            when = subwayOpens
//        }
        result["departure"] = when
        result["arrival"] = /*when +*/ getSubwayData(from, to: to)
        
        return result
    }

    // On Foot Data (timedelta in minutes)
    let onFootEduDeltas = [
        "aeroport": 14,
        "strogino": 6,
        "tekstilshiki": 10,
        "st_basmannaya": 16,
        "vavilova": 5,
        "myasnitskaya": 6,
        "izmailovo": 16,
        "shabolovskaya": 4,
        "petrovka": 6,
        "paveletskaya": 5,
        "ilyinka": 7,
        "trehsvyat_b": 13,
        "trehsvyat_m": 15,
        "hitra": 13,
        "gnezdo": 5
    ]
    
    let mapSources = [
        "aeroport": "9kfYmO7lbg2o_YuSTvZqiY9rCevo23cs",
        "strogino": "pMeBRyKZjz3PnQn4HCZKIlagbMIv2Bxp",
        "tekstilshiki": "IcVLk9vNC1afHy5ge05Ae07wahHXZZ7H",
        "st_basmannaya": "LwunOFh66TXk8NyRAgKpsssV0Gdy34pG",
        "vavilova": "_Cz-NprpRRfD15AECXvyxGQb5N7RY3xC",
        "myasnitskaya": "GGWd7qLfRklaR5KSQQpKFOiJT8RPFGO-",
        "izmailovo": "tTSwzei04UwodpOe5ThQSKwo47ZiR8aO",
        "shabolovskaya": "0enMIqcJ_dLy8ShEHN34Lu-4XBAHsrno",
        "petrovka": "pSiE6gI2ftRfAGBDauSW0G0H2o9R726u",
        "paveletskaya": "1SimW8pYfuzER0tbTEYFs1RFaNUFnhh-",
        "ilyinka": "7UEkPE7kT0Bhb4rOzDbk2O57LdWBE8Lq",
        "trehsvyat_b": "_WWkurGGUbabsiPE9xgdLP_iJ61vbJrZ",
        "trehsvyat_m": "jBGwqmV8V-JjFzbG2M_13sGlAUVqug-9",
        "hitra": "j1cHqL5k2jw_MK31dlBLEwPPPmj72NNg",
        "gnezdo": "_a_UjKz_rMbmf2l_mWtsRUjlaqlRySIS"
    ]
    
    func formMapUrl(edu: String, type: String = "img") -> String? {
        if type == "img" {
            return "https://api-maps.yandex.ru/services/constructor/1.0/static/?sid=" + mapSources[edu]!
        } else if type == "script" {
            return "https://api-maps.yandex.ru/services/constructor/1.0/js/?sid=" + mapSources[edu]!
        }
        return nil
    }
    
    func getNearestOnFoot(edu: String, when: NSDate) -> Dictionary<String, AnyObject> {
        var result: Dictionary<String, AnyObject> = ["departure": when]
        result["arrival"] = when /*+ onFootEduDeltas[edu]*/
        result["time"] = onFootEduDeltas[edu]
        result["mapsrc"] = formMapUrl(edu)
        
        return result
    }
    
    // dormitory
    let dorms = [
        "dubki": "–î—É–±–∫–∏",
    ]
    
    // campus
    let edus = [
        "aeroport": "–ö–æ—á–Ω–æ–≤—Å–∫–∏–π –ø—Ä–æ–µ–∑–¥ (–º–µ—Ç—Ä–æ –ê—ç—Ä–æ–ø–æ—Ä—Ç)",
        "strogino": "–°—Ç—Ä–æ–≥–∏–Ω–æ",
        "myasnitskaya": "–ú—è—Å–Ω–∏—Ü–∫–∞—è (–º–µ—Ç—Ä–æ –õ—É–±—è–Ω–∫–∞)",
        "vavilova": "–í–∞–≤–∏–ª–æ–≤–∞ (–º–µ—Ç—Ä–æ –õ–µ–Ω–∏–Ω—Å–∫–∏–π –ø—Ä–æ—Å–ø–µ–∫—Ç)",
        "izmailovo": "–ö–∏—Ä–ø–∏—á–Ω–∞—è —É–ª–∏—Ü–∞ (–º–µ—Ç—Ä–æ –°–µ–º—ë–Ω–æ–≤—Å–∫–∞—è)",
        "tekstilshiki": "–¢–µ–∫—Å—Ç–∏–ª—å—â–∏–∫–∏",
        "st_basmannaya": "–°—Ç–∞—Ä–∞—è –ë–∞—Å–º–∞–Ω–Ω–∞—è",
        "shabolovskaya": "–®–∞–±–æ–ª–æ–≤—Å–∫–∞—è",
        "petrovka": "–ü–µ—Ç—Ä–æ–≤–∫–∞ (–º–µ—Ç—Ä–æ –ö—É–∑–Ω–µ—Ü–∫–∏–π –º–æ—Å—Ç)",
        "paveletskaya": "–ú–∞–ª–∞—è –ü–∏–æ–Ω–µ—Ä—Å–∫–∞—è (–º–µ—Ç—Ä–æ –ü–∞–≤–µ–ª–µ—Ü–∫–∞—è)",
        "ilyinka": "–ò–ª—å–∏–Ω–∫–∞ (–º–µ—Ç—Ä–æ –ö–∏—Ç–∞–π-–≥–æ—Ä–æ–¥)",
        "trehsvyat_b": "–ë–æ–ª—å—à–æ–π –¢—Ä—ë—Ö—Å–≤—è—Ç–∏—Ç–µ–ª—å—Å–∫–∏–π –ø–µ—Ä–µ—É–ª–æ–∫ (–º–µ—Ç—Ä–æ –ö–∏—Ç–∞–π-–≥–æ—Ä–æ–¥)",
        "trehsvyat_m": "–ú–∞–ª—ã–π –¢—Ä—ë—Ö—Å–≤—è—Ç–∏—Ç–µ–ª—å—Å–∫–∏–π –ø–µ—Ä–µ—É–ª–æ–∫ (–º–µ—Ç—Ä–æ –ö–∏—Ç–∞–π-–≥–æ—Ä–æ–¥)",
        "hitra": "–•–∏—Ç—Ä–æ–≤—Å–∫–∏–π –ø–µ—Ä–µ—É–ª–æ–∫ (–º–µ—Ç—Ä–æ –ö–∏—Ç–∞–π-–≥–æ—Ä–æ–¥)",
        "gnezdo": "–ú–∞–ª—ã–π –ì–Ω–µ–∑–¥–Ω–∏–∫–æ–≤—Å–∫–∏–π –ø–µ—Ä–µ—É–ª–æ–∫ (–º–µ—Ç—Ä–æ –¢–≤–µ—Ä—Å–∫–∞—è)"
    ]
    
    // maps edus to preferred stations
    let prefStations = [
        "aeroport": "–ë–µ–ª–æ—Ä—É—Å—Å–∫–∞—è",
        "strogino": "–ö—É–Ω—Ü–µ–≤–æ",
        "tekstilshiki": "–ë–µ–≥–æ–≤–∞—è",
        "st_basmannaya": "–ö—É–Ω—Ü–µ–≤–æ",
        "vavilova": "–ö—É–Ω—Ü–µ–≤–æ",
        "myasnitskaya": "–ë–µ–≥–æ–≤–∞—è",
        "izmailovo": "–ö—É–Ω—Ü–µ–≤–æ",
        "shabolovskaya": "–ë–µ–≥–æ–≤–∞—è",
        "petrovka": "–ë–µ–≥–æ–≤–∞—è",
        "paveletskaya":"–ë–µ–≥–æ–≤–∞—è",
        "ilyinka": "–ë–µ–≥–æ–≤–∞—è",
        "trehsvyat_b": "–ë–µ–≥–æ–≤–∞—è",
        "trehsvyat_m": "–ë–µ–≥–æ–≤–∞—è",
        "hitra": "–ë–µ–≥–æ–≤–∞—è",
        "gnezdo": "–ë–µ–ª–æ—Ä—É—Å—Å–∫–∞—è"
    ]
    
    // delta to pass from railway station to subway station
    let ttsDeltas = [
        "–ö—É–Ω—Ü–µ–≤–æ": 10,
        "–§–∏–ª–∏": 7,
        "–ë–µ–≥–æ–≤–∞—è": 5,
        "–ë–µ–ª–æ—Ä—É—Å—Å–∫–∞—è": 5
    ]
    
    let ttsNames = [
        "–ö—É–Ω—Ü–µ–≤–æ": "–ö—É–Ω—Ü–µ–≤—Å–∫–∞—è",
        "–§–∏–ª–∏": "–§–∏–ª–∏",
        "–ë–µ–≥–æ–≤–∞—è": "–ë–µ–≥–æ–≤–∞—è",
        "–ë–µ–ª–æ—Ä—É—Å—Å–∫–∞—è": "–ë–µ–ª–æ—Ä—É—Å—Å–∫–∞—è"
    ]
    
    let subways = [
        "aeroport": "–ê—ç—Ä–æ–ø–æ—Ä—Ç",
        "myasnitskaya": "–õ—É–±—è–Ω–∫–∞",
        "strogino": "–°—Ç—Ä–æ–≥–∏–Ω–æ",
        "st_basmannaya": "–ö—É—Ä—Å–∫–∞—è",
        "tekstilshiki": "–¢–µ–∫—Å—Ç–∏–ª—å—â–∏–∫–∏",
        "vavilova": "–õ–µ–Ω–∏–Ω—Å–∫–∏–π –ø—Ä–æ—Å–ø–µ–∫—Ç",
        "izmailovo": "–°–µ–º—ë–Ω–æ–≤—Å–∫–∞—è",
        "shabolovskaya": "–®–∞–±–æ–ª–æ–≤—Å–∫–∞—è",
        "petrovka": "–ö—É–∑–Ω–µ—Ü–∫–∏–π –º–æ—Å—Ç",
        "paveletskaya": "–ü–∞–≤–µ–ª–µ—Ü–∫–∞—è",
        "ilyinka": "–ö–∏—Ç–∞–π-–≥–æ—Ä–æ–¥",
        "trehsvyat_b": "–ö–∏—Ç–∞–π-–≥–æ—Ä–æ–¥",
        "trehsvyat_m": "–ö–∏—Ç–∞–π-–≥–æ—Ä–æ–¥",
        "hitra": "–ö–∏—Ç–∞–π-–≥–æ—Ä–æ–¥",
        "gnezdo": "–¢–≤–µ—Ä—Å–∫–∞—è"
    ]

}
